pluginManagement {
    repositories {
        maven { url = "https://maven.minecraftforge.net/" }
        gradlePluginPortal()
    }
    plugins {
        id 'org.jetbrains.kotlin.jvm' version '2.0.21'
    }
}

dependencyResolutionManagement {
    repositories {
        mavenCentral()
    }
    versionCatalogs {
        // Minecraft Version
        def minecraftVersion = "1.20.1"

        // Mod Dependencies Versions
        // Common
        def jeiVersion = "15.20.0.105"
        def reiVersion = "12.1.785"
        def emiVersion = "1.1.13"
        def kjsVersion = "2001.6.4-build.120"
        def architecturyVersion = "9.2.14"
        def rhinoVersion = "2001.2.3-build.6"
        def auVersion = "1.20.1-0.6.0"

        // Forge
        def quiltMappingsVersion = "5"  // https://lambdaurora.dev/tools/import_quilt.html
        def parchmentVersion = "2023.09.03" // https://parchmentmc.org/docs/getting-started
        def modDevGradleVersion = "2.0.52-beta"
        def macheteVersion = "1.+"
        def forgeVersion = "47.1.47"
        def registrateForgeVersion = "MC1.20-1.3.11"
        def ldLibVersion = "1.0.31"
        def mixinextrasVersion = "0.2.0"
        def configurationVersion = "2.2.0"
        def tconstructVersion = "3.9.1.19"
        def mantleVersion = "1.11.36"
        def lombokPluginVersion = "8.7.1"

        forge {
            version("forgeShortVersion", forgeVersion)
            def minecraftForge = version("minecraftForge", "${minecraftVersion}-${forgeVersion}")
            library("minecraftForge", "net.minecraftforge", "forge").versionRef(minecraftForge)

            def ldLib = version("ldlib", ldLibVersion)
            library("ldlib-forge", "com.lowdragmc.ldlib", "ldlib-forge-${minecraftVersion}").versionRef(ldLib)

            def registrate = version("registrate", registrateForgeVersion)
            library("registrate", "com.tterrag.registrate", "Registrate").versionRef(registrate)

            def jei = version("jei", jeiVersion)
            library("jei-common-api", "mezz.jei", "jei-${minecraftVersion}-common-api").versionRef(jei)
            library("jei-forge-api", "mezz.jei", "jei-${minecraftVersion}-forge-api").versionRef(jei)
            library("jei-forge-impl", "mezz.jei", "jei-${minecraftVersion}-forge").versionRef(jei)

            def rei = version("rei", reiVersion)
            library("rei-plugin", "me.shedaniel", "RoughlyEnoughItems-default-plugin-forge").versionRef(rei)
            library("rei-api", "me.shedaniel", "RoughlyEnoughItems-api-forge").versionRef(rei)
            library("rei-forge", "me.shedaniel", "RoughlyEnoughItems-forge").versionRef(rei)

            def emi = version("emi", emiVersion + "+" + minecraftVersion)
            library("emi", "dev.emi", "emi-forge").versionRef(emi)

            def kubejs = version("kubejs", kjsVersion)
            library("kubejs", "dev.latvian.mods", "kubejs-forge").versionRef(kubejs)
            def architectury = version("architectury", architecturyVersion)
            library("architectury", "dev.architectury", "architectury-forge").versionRef(architectury)
            def rhino = version("rhino", rhinoVersion)
            library("rhino", "dev.latvian.mods", "rhino-forge").versionRef(rhino)

            def mixinextras = version("mixinextras", mixinextrasVersion)
            library("mixinextras-forge", "io.github.llamalad7", "mixinextras-forge").versionRef(mixinextras)

            def configuration = version("configuration", configurationVersion)
            library("configuration", "dev.toma.configuration", "configuration-forge-1.20.1").versionRef(configuration)

            def tinkers = version("tconstruct", minecraftVersion + "-" + tconstructVersion)
            library("tconstruct", "slimeknights.tconstruct", "TConstruct").versionRef(tinkers)

            def mantle = version("mantle", minecraftVersion + "-" + mantleVersion)
            library("mantle", "slimeknights.mantle", "Mantle").versionRef(mantle)
        }

        libs {
            version("quiltMappings", quiltMappingsVersion)
            version("parchment", parchmentVersion)

            def minecraft = version("minecraft", minecraftVersion)
            library("minecraft", "com.mojang", "minecraft").versionRef(minecraft)

            def modDevGradle = version("modDevGradleLegacy", modDevGradleVersion)
            plugin("modDevGradle", "net.neoforged.moddev.legacyforge").versionRef(modDevGradle)

            def machete = version("machete", macheteVersion)
            plugin("machete", "io.github.p03w.machete").versionRef(machete)

            def lombok = version("lombok", lombokPluginVersion)
            plugin("lombok", "io.freefair.lombok").versionRef(lombok)
        }
    }
}

rootProject.name = "${mod_id}"