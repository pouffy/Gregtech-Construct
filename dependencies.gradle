//file:noinspection DependencyNotationArgument
dependencies {
    compileOnly 'org.jetbrains:annotations:24.1.0'

    // LDLib
    modApi(forge.ldlib.forge) { transitive = false }
    jarJar(forge.ldlib.forge)

    // Registrate
    modImplementation(jarJar("com.tterrag.registrate:Registrate:${forge.versions.registrate.get()}"))

    // Configuration
    modApi(forge.configuration)
    jarJar(forge.configuration)

    // Mixin (& Extras)
    api(annotationProcessor("io.github.llamalad7:mixinextras-common:${this.forge.versions.mixinextras.get()}"))
    jarJar("io.github.llamalad7:mixinextras-forge:${this.forge.versions.mixinextras.get()}")
    annotationProcessor 'org.spongepowered:mixin:0.8.7:processor'

    // JEI
    modCompileOnly(forge.jei.common.api) { transitive = false }
    modCompileOnly(forge.jei.forge.api) { transitive = false }
    modCompileOnly(forge.jei.forge.impl) { transitive = false }

    // Tinkers
    modCompileOnly(forge.tconstruct)
    modCompileOnly(forge.mantle)
    modRuntimeOnly(forge.tconstruct)
    modRuntimeOnly(forge.mantle)

    // REI
    modCompileOnly(forge.rei.plugin)
    modCompileOnly(forge.rei.api)
    modCompileOnly(forge.rei.forge)

    // EMI
    //modCompileOnly("dev.emi:emi-forge:${forge.versions.emi.get()}:api")
    modCompileOnly(forge.emi)

    // KJS
    modCompileOnly(forge.kubejs) { transitive = false }
    modCompileOnly(forge.architectury)
    modCompileOnly(forge.rhino)

    // Runtime Recipe Viewers - uncomment whichever group you want to use //
    modRuntimeOnly(forge.emi)

    modExtraRuntimeOnly(forge.kubejs)
    modExtraRuntimeOnly(forge.architectury)
    modExtraRuntimeOnly(forge.rhino)
}